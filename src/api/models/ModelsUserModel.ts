/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CtypeRole } from './CtypeRole';
import {
    CtypeRoleFromJSON,
    CtypeRoleFromJSONTyped,
    CtypeRoleToJSON,
    CtypeRoleToJSONTyped,
} from './CtypeRole';

/**
 * 
 * @export
 * @interface ModelsUserModel
 */
export interface ModelsUserModel {
    /**
     * 
     * @type {string}
     * @memberof ModelsUserModel
     */
    avatar?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsUserModel
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsUserModel
     */
    email?: string;
    /**
     * 
     * @type {number}
     * @memberof ModelsUserModel
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ModelsUserModel
     */
    nickname?: string;
    /**
     * 1 管理员 2 普通用户
     * @type {CtypeRole}
     * @memberof ModelsUserModel
     */
    role?: CtypeRole;
    /**
     * 
     * @type {string}
     * @memberof ModelsUserModel
     */
    tel?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsUserModel
     */
    userID?: string;
}



/**
 * Check if a given object implements the ModelsUserModel interface.
 */
export function instanceOfModelsUserModel(value: object): value is ModelsUserModel {
    return true;
}

export function ModelsUserModelFromJSON(json: any): ModelsUserModel {
    return ModelsUserModelFromJSONTyped(json, false);
}

export function ModelsUserModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelsUserModel {
    if (json == null) {
        return json;
    }
    return {
        
        'avatar': json['avatar'] == null ? undefined : json['avatar'],
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'email': json['email'] == null ? undefined : json['email'],
        'id': json['id'] == null ? undefined : json['id'],
        'nickname': json['nickname'] == null ? undefined : json['nickname'],
        'role': json['role'] == null ? undefined : CtypeRoleFromJSON(json['role']),
        'tel': json['tel'] == null ? undefined : json['tel'],
        'userID': json['userID'] == null ? undefined : json['userID'],
    };
}

  export function ModelsUserModelToJSON(json: any): ModelsUserModel {
      return ModelsUserModelToJSONTyped(json, false);
  }

  export function ModelsUserModelToJSONTyped(value?: ModelsUserModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'avatar': value['avatar'],
        'createdAt': value['createdAt'],
        'email': value['email'],
        'id': value['id'],
        'nickname': value['nickname'],
        'role': CtypeRoleToJSON(value['role']),
        'tel': value['tel'],
        'userID': value['userID'],
    };
}


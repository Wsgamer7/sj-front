/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  MessageGetHistoryMsgPost200Response,
  MessageSendMsgPost200Response,
} from '../models/index';
import {
    MessageGetHistoryMsgPost200ResponseFromJSON,
    MessageGetHistoryMsgPost200ResponseToJSON,
    MessageSendMsgPost200ResponseFromJSON,
    MessageSendMsgPost200ResponseToJSON,
} from '../models/index';

export interface MessageGetHistoryMsgPostRequest {
    userID: number;
    courseID: number;
    chapterID: number;
}

export interface MessageSendMsgPostRequest {
    userID: number;
    courseID: number;
    chapterID: number;
    content: string;
}

/**
 * 
 */
export class MessageApi extends runtime.BaseAPI {

    /**
     * 获取历史消息
     * 获取历史消息
     */
    async messageGetHistoryMsgPostRaw(requestParameters: MessageGetHistoryMsgPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MessageGetHistoryMsgPost200Response>> {
        if (requestParameters['userID'] == null) {
            throw new runtime.RequiredError(
                'userID',
                'Required parameter "userID" was null or undefined when calling messageGetHistoryMsgPost().'
            );
        }

        if (requestParameters['courseID'] == null) {
            throw new runtime.RequiredError(
                'courseID',
                'Required parameter "courseID" was null or undefined when calling messageGetHistoryMsgPost().'
            );
        }

        if (requestParameters['chapterID'] == null) {
            throw new runtime.RequiredError(
                'chapterID',
                'Required parameter "chapterID" was null or undefined when calling messageGetHistoryMsgPost().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['userID'] != null) {
            queryParameters['userID'] = requestParameters['userID'];
        }

        if (requestParameters['courseID'] != null) {
            queryParameters['courseID'] = requestParameters['courseID'];
        }

        if (requestParameters['chapterID'] != null) {
            queryParameters['chapterID'] = requestParameters['chapterID'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/message/get_history_msg`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MessageGetHistoryMsgPost200ResponseFromJSON(jsonValue));
    }

    /**
     * 获取历史消息
     * 获取历史消息
     */
    async messageGetHistoryMsgPost(requestParameters: MessageGetHistoryMsgPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MessageGetHistoryMsgPost200Response> {
        const response = await this.messageGetHistoryMsgPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 发送消息
     * 发送消息
     */
    async messageSendMsgPostRaw(requestParameters: MessageSendMsgPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MessageSendMsgPost200Response>> {
        if (requestParameters['userID'] == null) {
            throw new runtime.RequiredError(
                'userID',
                'Required parameter "userID" was null or undefined when calling messageSendMsgPost().'
            );
        }

        if (requestParameters['courseID'] == null) {
            throw new runtime.RequiredError(
                'courseID',
                'Required parameter "courseID" was null or undefined when calling messageSendMsgPost().'
            );
        }

        if (requestParameters['chapterID'] == null) {
            throw new runtime.RequiredError(
                'chapterID',
                'Required parameter "chapterID" was null or undefined when calling messageSendMsgPost().'
            );
        }

        if (requestParameters['content'] == null) {
            throw new runtime.RequiredError(
                'content',
                'Required parameter "content" was null or undefined when calling messageSendMsgPost().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['userID'] != null) {
            queryParameters['userID'] = requestParameters['userID'];
        }

        if (requestParameters['courseID'] != null) {
            queryParameters['courseID'] = requestParameters['courseID'];
        }

        if (requestParameters['chapterID'] != null) {
            queryParameters['chapterID'] = requestParameters['chapterID'];
        }

        if (requestParameters['content'] != null) {
            queryParameters['content'] = requestParameters['content'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/message/send_msg`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MessageSendMsgPost200ResponseFromJSON(jsonValue));
    }

    /**
     * 发送消息
     * 发送消息
     */
    async messageSendMsgPost(requestParameters: MessageSendMsgPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MessageSendMsgPost200Response> {
        const response = await this.messageSendMsgPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
